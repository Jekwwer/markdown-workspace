{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Markdown Workspace","text":""},{"location":"#project-overview","title":"Project Overview \ud83d\ude80","text":"<p>This repository is a comprehensive template for working with Markdown files. It comes equipped with tools for code formatting and linting, link validation, TOC generation, spell checking, a ready-to-use devcontainer, custom VS Code settings, essential repository files, automated releasing, and extensive documentation to support effective project management and customization.</p>"},{"location":"#features","title":"Features \u2728","text":"<ul> <li> <p>Devcontainer:   Provides an Ubuntu-based environment with Python and Node support, custom VS Code settings and extensions,   and a local PostgreSQL service.</p> </li> <li> <p>Formatting:   Ensures consistent code style using Prettier, EditorConfig, and other tools.</p> </li> <li> <p>Linting:   Enforces Markdown standards and best practices with markdownlint.</p> </li> <li> <p>Link Checking:   Validates internal and external links to prevent broken URLs.</p> </li> <li> <p>Spell Checking:   Detects and highlights spelling errors in Markdown files.</p> </li> <li> <p>Table of Contents (TOC):   Automatically generates and updates TOCs for large files.   (Note: Redundant if using MkDocs, as it generates TOCs automatically.)</p> </li> <li> <p>Live Preview:   Provides a local preview of documentation as a website using MkDocs.</p> </li> <li> <p>Static Site Generation:   Converts Markdown files into a fully functional static website with MkDocs.</p> </li> <li> <p>Automated Deployment:   Deploys documentation to GitHub Pages via GitHub Actions or the <code>mkdocs gh-deploy</code> command.</p> </li> <li> <p>Pre-commit Hooks:   Automates quality checks before each commit.</p> </li> <li> <p>Release Automation:   Manages releases automatically.</p> </li> <li> <p>Dependency Updates Automation:   Keeps dependencies up-to-date via Dependabot.</p> </li> </ul>"},{"location":"#installation","title":"Installation \ud83d\udce6","text":"<p>This setup is designed for GitHub Codespaces. Running locally has not been tested and may require additional configuration.</p>"},{"location":"#usage","title":"Usage \ud83d\udee0\ufe0f","text":"<p>The following scripts are available for managing and checking Markdown files:</p>"},{"location":"#formatting","title":"Formatting","text":"<ul> <li>Run Prettier to format Markdown files:</li> </ul> <p><code>bash   npm run format:write</code></p>"},{"location":"#linting","title":"Linting","text":"<ul> <li>Lint Markdown files with <code>markdownlint-cli</code>:</li> </ul> <p><code>bash   npm run lint:markdown</code></p>"},{"location":"#link-checking","title":"Link Checking","text":"<ul> <li>Check Links in Markdown files to prevent broken URLs:</li> </ul> <p><code>bash   npm run links:check</code></p>"},{"location":"#spell-checking","title":"Spell Checking","text":"<ul> <li>Run Spell Check on Markdown files:</li> </ul> <p><code>bash   npm run spell:check</code></p>"},{"location":"#table-of-contents-generation","title":"Table of Contents Generation","text":"<ul> <li>Generate or Update TOC in Markdown files containing the <code>[[toc]]</code> placeholder:</li> </ul> <p>Add the <code>[[toc]]</code> placeholder where you want the TOC to appear in your Markdown files. For example:</p> <p>```markdown   # My Project</p> <p>## Table of Contents</p> <p>[[toc]]</p> <p>## Section 1</p> <p>Content for section 1.</p> <p>### Subsection 1.1</p> <p>Content for subsection 1.1.</p> <p>## Section 2</p> <p>Content for section 2.   ```</p> <p>Then run the following command to generate or update the TOC:</p> <p><code>bash   npm run generate:toc</code></p> <ul> <li>After running the command, the <code>[[toc]]</code> placeholder will be replaced with a dynamically generated Table of Contents:</li> </ul> <p>```markdown   # My Project</p> <p>## Table of Contents</p> <ul> <li>Section 1<ul> <li>Subsection 1.1</li> </ul> </li> <li>Section 2</li> </ul> <p>## Section 1</p> <p>Content for section 1.</p> <p>### Subsection 1.1</p> <p>Content for subsection 1.1.</p> <p>## Section 2</p> <p>Content for section 2.   ```</p>"},{"location":"#live-preview-with-mkdocs","title":"Live Preview with MkDocs","text":"<ul> <li>Preview Markdown files as a website using MkDocs:</li> </ul> <p><code>bash   npm run docs:serve</code></p> <ul> <li>Visit <code>http://localhost:8000</code> in your browser to see the documentation.</li> </ul>"},{"location":"#build-documentation-with-mkdocs","title":"Build Documentation with MkDocs","text":"<ul> <li>Build static site from Markdown files using MkDocs:</li> </ul> <p>To create a static website from your documentation, run the following command:</p> <p><code>bash   npm run docs:build</code></p> <p>This command will generate a <code>site</code> directory containing the built static files.   You can serve these files with any web server or use them for deployment.</p>"},{"location":"#deployment-to-github-pages","title":"Deployment to GitHub Pages","text":"<ul> <li> <p>Deploy your documentation to GitHub Pages with MkDocs:</p> </li> <li> <p>Ensure your repository is set up with a <code>mkdocs.yml</code> configuration file and the documentation source files.</p> </li> <li> <p>Deploy your documentation using one of the following methods:</p> <p>a. Manual Deployment:  Run the following command to manually deploy the documentation:</p> <p><code>bash  npm run docs:deploy</code></p> <p>This command will:</p> <ul> <li>Build the static site.</li> <li>Push the <code>site</code> directory to the <code>gh-pages</code> branch of your repository.</li> </ul> <p>After deployment, your documentation will be available at:</p> <p><code>plaintext  https://&lt;username&gt;.github.io/&lt;repository-name&gt;/</code></p> <p>b. Automated Deployment with GitHub Actions:  The project includes a GitHub Actions workflow (<code>.github/workflows/deploy.yml</code>)  that automatically deploys the documentation to GitHub Pages whenever changes are pushed to the <code>main</code> branch.</p> <p>After deployment, your documentation will be available at the <code>gh-pages</code> branch of your repository:</p> <p><code>plaintext  https://&lt;username&gt;.github.io/&lt;repository-name&gt;/</code></p> </li> </ul> <p>Note: Ensure your repository settings have GitHub Pages enabled, and the source is set to the <code>gh-pages</code> branch.</p>"},{"location":"#contributing","title":"Contributing \ud83d\udc65","text":"<p>Contributions are welcome! Please read the Contributing Guidelines and check the issues page.</p>"},{"location":"#license","title":"License \ud83d\udee1\ufe0f","text":"<p>This project is licensed under the MIT License.</p>"},{"location":"#contact","title":"Contact \ud83d\udcec","text":"<p>For questions, reach out via evgenii.shiliaev@jekwwer.com or open an issue.</p> <p>This document is based on a template by Evgenii Shiliaev, licensed under CC BY 4.0. All additional content is licensed under LICENSE.</p>"}]}